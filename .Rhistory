print('No saddle point found.')
print('No saddle point found.')
print('No saddle point found.')
print('No saddle point found.')
print('No saddle point found.')
print('No saddle point found.')
print('No saddle point found.')
print('No saddle point found.')
print('No saddle point found.')
print('No saddle point found.')
print('No saddle point found.')
print('No saddle point found.')
print('No saddle point found.')
print('No saddle point found.')
print('No saddle point found.')
print('No saddle point found.')
print('No saddle point found.')
print('No saddle point found.')
print('No saddle point found.')
if (k == 1) {
print('No saddle point found.')
}
if (k == 1) {
print('No saddle point found.')
}
(Ka[i, j]
Ka[i, j]
i
j
j <- 3
Ka[i, j]
colMax_Ka[j]
Kd[i, j]
rowMin_Kd[i]
source('~/Dropbox (MIT)/MIT/1.208/Final/Model/1.208_Final_Game1.R')
j <- 3
Ka[i, j]
rowMin_Ka[i]
let i = 3
i <- 3
rowMin_Ka[i]
rowMin_Ka
Ka
Ka
Kd
Ka
Ka <- matrix(
rep(delay1, each = numStations),
nrow = numStations,
ncol = numStations
)
diag(Ka) <- 0
Ka <- matrix(
rep(delay1, each = numStations),
nrow = numStations,
ncol = numStations
)
diag(Ka) <- 0
Ka
Kd <- Ka + C_fe + C_cr
Kd
C_fe
C_cr
Kd <- Ka - C_fe - C_cr
Kd
library(matrixStats)
# Parameters
numStations <- 4
VOT <- 10
fare <- 2
SC_cr <- 200
Prob_pr <- .01
# O-D Demand
D <- matrix(
c(0,13,8,12,
6,0,7,11,
11,5,0,2,
3,7,9,0),
nrow = 4,
ncol = 4
)
productions <- .colSums(D, numStations, numStations)
attractions <- .rowSums(D, numStations, numStations)
# Travel Time on Rapid Network
Tr <- matrix(
c(0,2,5,7,
2,0,3,5,
5,3,0,2,
7,5,2,0),
nrow = 4,
ncol = 4
)
# Travel Time on Aux Network
Tb <- matrix(
c(0,3,7,10,
3,0,5,9,
7,5,0,4,
10,9,4,0),
nrow = 4,
ncol = 4
)
# Fare evasion rates
r_fe <- c(.15, .02, .04, .28)
c_fe <- productions * r_fe * fare
C_fe <- matrix(
rep(c_fe, numStations),
nrow = numStations,
ncol = numStations
)
# Crime rates
r_cr <- c(.0001, .0003, .0002, .0007)
c_cr <- (productions + attractions) * r_cr * SC_cr
C_cr <- matrix(
rep(c_cr, numStations),
nrow = numStations,
ncol = numStations
)
# Delay vectors
# Level 1 protest
delay1 <- numeric(numStations)
for (n in 1:numStations) {
delay1[n] <-
D[n, ]%*%Tb[n, ] +
D[, n]%*%Tb[, n] -
D[n, ]%*%Tr[n, ] -
D[, n]%*%Tr[, n]
}
c_pr1 <- VOT * Prob_pr * delay1
# Attacker payoff matrix
Ka <- matrix(
rep(delay1, each = numStations),
nrow = numStations,
ncol = numStations
)
diag(Ka) <- 0
# Defender payoff matrix
Kd <- Ka - C_fe - C_cr
# Saddle points
colMax_Ka <- colMaxs(Ka)
# rowMin_Ka <- rowMins(Ka)
# for non-zero-sum
rowMin_Kd <- rowMins(Kd)
k <- 1
for (i in 1:numStations) {
for (j in 1:numStations) {
if (Ka[i, j] == colMax_Ka[j] && Kd[i, j] == rowMin_Kd[i]) {
saddlePoint[k] <- c(i, j)
k <- k + 1
}
}
}
if (k == 1) {
print('No saddle point found.')
}
Ka
unifProb <- 1 / numStations
p <- rep(unifProb, numStations)
pA <- crossprod(p, Ka)
unifProb <- 1 / numStations
p <- rep(unifProb, numStations)
pA <- crossprod(p, Ka)
pA
source('~/Dropbox (MIT)/MIT/1.208/Final/Model/1.208_Final_Game1.R')
source('~/Dropbox (MIT)/MIT/1.208/Final/Model/1.208_Final_Game1.R')
gap
pn
qn
source('~/Dropbox (MIT)/MIT/1.208/Final/Model/1.208_Final_Game1.R')
pn
source('~/Dropbox (MIT)/MIT/1.208/Final/Model/1.208_Final_Game1.R')
source('~/Dropbox (MIT)/MIT/1.208/Final/Model/1.208_Final_Game1.R')
gap
pn
qn
plot(gap)
source('~/Dropbox (MIT)/MIT/1.208/Final/Model/1.208_Final_Game1.R')
plot(gap)
gap
min(gap)
source('~/Dropbox (MIT)/MIT/1.208/Final/Model/1.208_Final_Game1.R')
gap
plot(gap)
min(gap)
source('~/Dropbox (MIT)/MIT/1.208/Final/Model/1.208_Final_Game1.R')
source('~/Dropbox (MIT)/MIT/1.208/Final/Model/1.208_Final_Game1.R')
gap_init
source('~/Dropbox (MIT)/MIT/1.208/Final/Model/1.208_Final_Game1.R')
gap_init
source('~/Dropbox (MIT)/MIT/1.208/Final/Model/1.208_Final_Game1.R')
source('~/Dropbox (MIT)/MIT/1.208/Final/Model/1.208_Final_Game1.R')
gap_init <- matrix(
0,
nrow = numStations,
ncol = numStations
)
gap_init
source('~/Dropbox (MIT)/MIT/1.208/Final/Model/1.208_Final_Game1.R')
source('~/Dropbox (MIT)/MIT/1.208/Final/Model/1.208_Final_Game1.R')
q_eq_init
source('~/Dropbox (MIT)/MIT/1.208/Final/Model/1.208_Final_Game1.R')
q_eq_init
source('~/Dropbox (MIT)/MIT/1.208/Final/Model/1.208_Final_Game1.R')
source('~/Dropbox (MIT)/MIT/1.208/Final/Model/1.208_Final_Game1.R')
q_eq_init
source('~/Dropbox (MIT)/MIT/1.208/Final/Model/1.208_Final_Game1.R')
source('~/Dropbox (MIT)/MIT/1.208/Final/Model/1.208_Final_Game1.R')
q_eq_init
source('~/Dropbox (MIT)/MIT/1.208/Final/Model/1.208_Final_Game1.R')
q_eq_init
q_eq_init[1,1,]
p_eq_init[1,1,]
p_eq_init
q_eq_init
source('~/Dropbox (MIT)/MIT/1.208/Final/Model/1.208_Final_Game1.R')
q_eq_init
source('~/Dropbox (MIT)/MIT/1.208/Final/Model/1.208_Final_Game1.R')
source('~/Dropbox (MIT)/MIT/1.208/Final/Model/1.208_Final_Game1.R')
source('~/Dropbox (MIT)/MIT/1.208/Final/Model/1.208_Final_Game1.R')
source('~/Dropbox (MIT)/MIT/1.208/Final/Model/1.208_Final_Game1.R')
source('~/Dropbox (MIT)/MIT/1.208/Final/Model/1.208_Final_Game1.R')
source('~/Dropbox (MIT)/MIT/1.208/Final/Model/1.208_Final_Game1.R')
source('~/Dropbox (MIT)/MIT/1.208/Final/Model/1.208_Final_Game1.R')
source('~/Dropbox (MIT)/MIT/1.208/Final/Model/1.208_Final_Game1.R')
p_eq_init
source('~/Dropbox (MIT)/MIT/1.208/Final/Model/1.208_Final_Game1.R')
n
source('~/Dropbox (MIT)/MIT/1.208/Final/Model/1.208_Final_Game1.R')
source('~/Dropbox (MIT)/MIT/1.208/Final/Model/1.208_Final_Game1.R')
plot(p_eq_init)
plot(p_eq_init)
plot(p_eq_init)
plot(q_eq_init)
plot(p_eq_init)
plot(q_eq_init)
source('~/Dropbox (MIT)/MIT/1.208/Final/Model/1.208_Final_Game1.R')
source('~/Dropbox (MIT)/MIT/1.208/Final/Model/1.208_Final_Game1.R')
source('~/Dropbox (MIT)/MIT/1.208/Final/Model/1.208_Final_Game1.R')
Ka
C_fe
C_cr
source('~/Dropbox (MIT)/MIT/1.208/Final/Model/1.208_Final_Game1.R')
source('~/Dropbox (MIT)/MIT/1.208/Final/Model/1.208_Final_Game1.R')
Ka
C_cr
C_fe
source('~/Dropbox (MIT)/MIT/1.208/Final/Model/1.208_Final_Game1.R')
Ka
Kd
plot(p_eq_init, title = "Defender's Mixed Strategies")
?plot
plot(p_eq_init, main =  = "Defender's Mixed Strategies")
plot(p_eq_init)
main(title = "Defender's Mixed Strategies")
title(main = "Defender's Mixed Strategies")
plot(p_eq_init)
title(main = "Defender's Mixed Strategy", xlab = "Iteration", ylab = "Probability")
plot(p_eq_init, xlab = NULL, ylab = NULL)
title(main = "Defender's Mixed Strategy", xlab = "Iteration", ylab = "Probability")
plot(p_eq_init, xlab = NULL, ylab = NULL)
title(main = "Defender's Mixed Strategy", xlab = "Iteration", ylab = "Probability")
plot(q_eq_init)
plot(q_eq_init)
plot(p_eq_init, xlab = NULL, ylab = NULL)
title(main = "Defender", sub ="Mixed Strategy", xlab = "Iteration", ylab = "Probability")
plot(p_eq_init, xlab = NULL, ylab = NULL)
title(main = "Defender", sub ="Mixed Strategy", xlab = "Iteration", ylab = "Probability")
?plot
plot(p_eq_init, xlab = NULL, ylab = NULL)
title(main = "Defender's Mixed Strategy", xlab = "Iteration", ylab = "Probability")
par(mpg)
plot(p_eq_init, xlab = NULL, ylab = NULL)
title(main = "Defender's Mixed Strategy", xlab = "Iteration", ylab = "Probability")
par(x)
plot(p_eq_init, xlab = NULL, ylab = NULL)
title(main = "Defender's Mixed Strategy", xlab = "Iteration", ylab = "Probability")
par(mgp)
plot(p_eq_init, xlab = NULL, ylab = NULL)
title(main = "Defender's Mixed Strategy", xlab = "Iteration", ylab = "Probability")
par(mgp)
plot(p_eq_init, xlab = "Iteration", ylab = "Probability")
title(main = "Defender's Mixed Strategy")
plot(p_eq_init, xlab = "Iteration", ylab = "Probability")
title(main = "Defender's Mixed Strategy")
?plot
?axis
plot(p_eq_init, xlab = "Iteration", ylab = "Probability")
title(main = "Defender's Mixed Strategy")
axis(1,at = c(8,24,40,56), labels = c(1, 2, 3, 4), line = 4)
plot(p_eq_init, xlab = "Iteration", ylab = "Probability")
title(main = "Defender's Mixed Strategy")
axis(1,at = c(8,24,40,56), labels = c(1, 2, 3, 4), line = 4)
plot(p_eq_init, xlab = "Iteration", ylab = "Probability")
title(main = "Defender's Mixed Strategy")
axis(2,at = c(8,24,40,56), labels = c(1, 2, 3, 4), line = 4)
plot(p_eq_init, xlab = "Iteration", ylab = "Probability")
title(main = "Defender's Mixed Strategy")
axis(2,at = c(8,24,40,56), labels = c(1, 2, 3, 4), line = 4)
plot(p_eq_init, xlab = "Iteration", ylab = "Probability")
title(main = "Defender's Mixed Strategy")
axis(3,at = c(8,24,40,56), labels = c(1, 2, 3, 4), line = 4)
plot(p_eq_init, xlab = "Iteration", ylab = "Probability", axis(3,at = c(8,24,40,56), labels = c(1, 2, 3, 4), line = 4))
title(main = "Defender's Mixed Strategy")
plot(p_eq_init, xlab = "Iteration", ylab = "Probability", axis(3,at = c(8,24,40,56), labels = c(1, 2, 3, 4), line = 4))
title(main = "Defender's Mixed Strategy")
plot(p_eq_init, xlab = "Iteration", ylab = "Probability", axis = NULL)
title(main = "Defender's Mixed Strategy")
axis(3,at = c(8,24,40,56), labels = c(1, 2, 3, 4), line = 4)
plot(p_eq_init, xlab = "Iteration", ylab = "Probability", axis = NULL)
title(main = "Defender's Mixed Strategy")
axis(3,at = c(8,24,40,56), labels = c(1, 2, 3, 4), line = 4)
plot(p_eq_init, xlab = "Iteration", ylab = "Probability", axis(1, at = c(8,24,40,56), labels = c(1, 2, 3, 4), line = 4))
title(main = "Defender's Mixed Strategy")
plot(p_eq_init, xlab = "Iteration", ylab = "Probability", axis(1, at = c(8,24,40,56), labels = c(1, 2, 3, 4), line = 4))
title(main = "Defender's Mixed Strategy")
plot(p_eq_init, xlab = "Iteration", ylab = "Probability")
title(main = "Defender's Mixed Strategy")
plot(q_eq_init, xlab = "Iteration", ylab = "Probability")
title(main = "Attacker's Mixed Strategy")
source('~/Dropbox (MIT)/MIT/1.208/Final/Model/1.208_Final_Game1.R')
source('~/Dropbox (MIT)/MIT/1.208/Final/Model/1.208_Final_Game1.R')
source('~/Dropbox (MIT)/MIT/1.208/Final/Model/1.208_Final_Game1.R')
source('~/Dropbox (MIT)/MIT/1.208/Final/Model/1.208_Final_Game1_Bogota.R')
source('~/Dropbox (MIT)/MIT/1.208/Final/Model/1.208_Final_Game1_Bogota.R')
library(matrixStats)
library(gdata)
# Parameters
numStations <- length(stationInventory$station_id)
VOT <- 9000 # COP/hr
fare <- 2200 # COP/trip
SC_cr <- 300000 # COP/incident of crime
Prob_pr <- .02 # probability of protest on any given day
protestStart <- 17
protestDuration <- .5
protestEnd <- protestStart + protestDuration
# Read input files
inputPath <- "/Users/jonathanleape/Dropbox (MIT)/MIT/1.208/Final/Inputs/"
tdmPath <- paste0(inputPath, "Demand Matrix/")
stnPath <- paste0(inputPath, "Station Data/")
tlmPath <- paste0(inputPath, "Travel Time Matrices/outputs/")
tdm_BRT <- read.csv(paste0(tdmPath, "tdm_DLN_BRT.csv"), header = TRUE)
stationInventory <- read.xls(paste0(stnPath, "stationInventory.xlsx"), sheet = "stationInventory", header = TRUE)
tlm_BRT <- read.csv(paste0(tlmPath, "tlm_DLN_BRT.csv"), header = TRUE)
tlm_Zonal <- read.csv(paste0(tlmPath, "tlm_DLN_Zonal.csv"), header = TRUE)
names(tlm_BRT) <- c('O', 'D', 'walk_dist', 'TT_BRT', 'boardings')
tlm_BRT$hr <- protestStart
keep <- c('O', 'D', 'hr', 'TT_BRT')
tlm_BRT <- tlm_BRT[keep]
names(tlm_Zonal) <- c('O', 'D', 'walk_dist', 'TT_Zonal', 'boardings')
tlm_Zonal$hr <- protestStart
keep <- c('O', 'D', 'hr', 'TT_Zonal')
tlm_Zonal <- tlm_Zonal[keep]
source('~/Dropbox (MIT)/MIT/1.208/Final/Model/1.208_Final_Game1_Bogota.R')
?plot
source('~/Dropbox (MIT)/MIT/1.208/Final/Model/1.208_Final_Game1_Bogota.R')
?plot
?table
?rendertable
p_nz <- pn[pn != 0]
q_nz <- qn[qn != 0]
p_nz_i <- which(pn != 0)
q_nz_i <- which(qn != 0)
p_nz_name <- stationInventory$station_name[p_nz_i]
q_nz_name <- stationInventory$station_name[q_nz_i]
p_nz_name
p_nz_name <- stationInventory[p_nz_i,]
q_nz_name <- stationInventory[q_nz_i,]
p_nz_name <- stationInventory[p_nz_i,]
q_nz_name <- stationInventory[q_nz_i,]
defenderTable <- data.frame(p_nz_data$station_name, p_nz_data$station_lat, p_nz_data$station_lon, p_nz)
p_nz_data <- stationInventory[p_nz_i,]
q_nz_data <- stationInventory[q_nz_i,]
defenderTable <- data.frame(p_nz_data$station_name, p_nz_data$station_lat, p_nz_data$station_lon, p_nz)
kable(defenderTable)
library(knitr)
kable(defenderTable)
defenderTable
defenderTable <- data.frame(p_nz_data$station_name, p_nz_data$station_lat, p_nz_data$station_lon, p_nz)
names(defenderTable) <- c('Station', 'Latitude', 'Longitude', 'Mixed Strategy')
defenderTable
kable(defenderTable)
?kable
kable(defenderTable)
print(kable(defenderTable, format = "latex", caption = 'Defender Results'))
kable(defenderTable, format = "latex", caption = 'Defender Results')
library(leaflet)
m <- leaflet() %>%
addTiles() %>%
addMarkers(lng=174.768, lat=-36.852, popup="The birthplace of R")
library(leaflet)
m <- leaflet() %>%
addTiles() %>%
addMarkers(lng=174.768, lat=-36.852, popup="The birthplace of R")
kable(defenderTable, format = "latex", caption = 'Defender Results')
library("xtable", lib.loc="/Library/Frameworks/R.framework/Versions/3.3/Resources/library")
?xtable
defenderTable
source('~/Dropbox (MIT)/MIT/1.208/Final/Model/1.208_Final_Game1_Bogota.R')
# 1.208 Final
# December 2017
# Jonathan Leape
# Game 1: two-player, non-collaborative, non-zero-sum, each player selects just one station
library(matrixStats)
library(gdata)
library(knitr)
# Parameters
VOT <- 9000 # COP/hr
fare <- 2200 # COP/trip
SC_cr <- 300000 # COP/incident of crime
Prob_pr <- .02 # probability of protest on any given day
protestStart <- 17
protestDuration <- .5
protestEnd <- protestStart + protestDuration
# Read input files
inputPath <- "/Users/jonathanleape/Dropbox (MIT)/MIT/1.208/Final/Inputs/"
tdmPath <- paste0(inputPath, "Demand Matrix/")
stnPath <- paste0(inputPath, "Station Data/")
tlmPath <- paste0(inputPath, "Travel Time Matrices/outputs/")
tdm_BRT <- read.csv(paste0(tdmPath, "tdm_DLN_BRT.csv"), header = TRUE)
stationInventory <- read.xls(paste0(stnPath, "stationInventory.xlsx"), sheet = "stationInventory", header = TRUE, fileEncoding = "UTF-8")
stationInventory
library(matrixStats)
library(gdata)
library(knitr)
# Parameters
VOT <- 9000 # COP/hr
fare <- 2200 # COP/trip
SC_cr <- 300000 # COP/incident of crime
Prob_pr <- .02 # probability of protest on any given day
protestStart <- 17
protestDuration <- .5
protestEnd <- protestStart + protestDuration
# Read input files
inputPath <- "/Users/jonathanleape/Dropbox (MIT)/MIT/1.208/Final/Inputs/"
tdmPath <- paste0(inputPath, "Demand Matrix/")
stnPath <- paste0(inputPath, "Station Data/")
tlmPath <- paste0(inputPath, "Travel Time Matrices/outputs/")
tdm_BRT <- read.csv(paste0(tdmPath, "tdm_DLN_BRT.csv"), header = TRUE)
stationInventory <- read.xls(paste0(stnPath, "stationInventory.xlsx"), sheet = "stationInventory", header = TRUE, fileEncoding = "latin1")
source('~/Dropbox (MIT)/MIT/1.208/Final/Model/1.208_Final_Game1_Bogota.R')
defenderTable
knitr::opts_chunk$set(echo = FALSE)
library(xtable)
kable(defenderTable, caption = 'Defender Strategy', label = 'defenderTable')
kable(attackerTable, caption = 'Attacker Strategy', label = 'attackerTable')
kable(defenderTable[[c('Station', 'Mixed Strategy')]], caption = 'Defender Strategy', label = 'defenderTable')
kable(defenderTable[c('Station', 'Mixed Strategy')], caption = 'Defender Strategy', label = 'defenderTable')
kable(defenderTable[c('Station', 'Mixed Strategy')], caption = 'Defender Strategy', label = 'defenderTable')
kable(defenderTable[c('Station', 'Mixed Strategy')], caption = 'Defender Strategy', label = 'defenderTable', digits = 3)
defenderTable <- data.frame(p_nz_data$station_name, p_nz_data$station_lat, p_nz_data$station_lon, p_nz_data$fare_evasion_rate, p_nz_data$crime_rate, p_nz_data$harassment_rate, p_nz)
names(defenderTable) <- c('Station', 'Latitude', 'Longitude', 'Fare Evasion Rate', 'Crime Rate', 'Harassment Rate', 'Mixed Strategy')
attackerTable <- data.frame(q_nz_data$station_name, q_nz_data$station_lat, q_nz_data$station_lon, q_nz_data$fare_evasion_rate, q_nz_data$crime_rate, q_nz_data$harassment_rate, q_nz)
names(attackerTable) <- c('Station', 'Latitude', 'Longitude', 'Fare Evasion Rate', 'Crime Rate', 'Harassment Rate', 'Mixed Strategy')
kable(defenderTable[c('Station', 'Fare Evasion Rate', 'Crime Rate', 'Harassment Rate', 'Mixed Strategy')], caption = 'Defender Strategy', label = 'defenderTable', digits = 3)
kable(defenderTable[c('Station', 'Fare Evasion Rate', 'Crime Rate', 'Harassment Rate', 'Mixed Strategy')], caption = 'Defender Strategy', label = 'defenderTable', digits = c(50, 3, 6, 6, 3))
kable(defenderTable[c('Station', 'Fare Evasion Rate', 'Crime Rate', 'Harassment Rate', 'Mixed Strategy')], caption = 'Defender Strategy (Rates per 1000 passengers)', label = 'defenderTable', digits =3)
defenderTable <- data.frame(p_nz_data$station_name, p_nz_data$station_lat, p_nz_data$station_lon, 1000 * p_nz_data$fare_evasion_rate, 1000 * p_nz_data$crime_rate, 1000 * p_nz_data$harassment_rate, p_nz)
names(defenderTable) <- c('Station', 'Latitude', 'Longitude', 'Fare Evasion Rate', 'Crime Rate', 'Harassment Rate', 'Mixed Strategy')
attackerTable <- data.frame(q_nz_data$station_name, q_nz_data$station_lat, q_nz_data$station_lon, 1000 * q_nz_data$fare_evasion_rate, 1000 * q_nz_data$crime_rate, 1000 * q_nz_data$harassment_rate, q_nz)
names(attackerTable) <- c('Station', 'Latitude', 'Longitude', 'Fare Evasion Rate', 'Crime Rate', 'Harassment Rate', 'Mixed Strategy')
kable(defenderTable[c('Station', 'Fare Evasion Rate', 'Crime Rate', 'Harassment Rate', 'Mixed Strategy')], caption = 'Defender Strategy (Rates per 1000 passengers)', label = 'defenderTable', digits = 3)
kable(defenderTable[c('Station', 'Fare Evasion Rate', 'Crime Rate', 'Harassment Rate', 'Mixed Strategy')], caption = 'Defender Strategy (Rates per 1000 passengers)', label = 'defenderTable', digits = c(50, 3, 6, 3, 3))
kable(attackerTable[c('Station', 'Fare Evasion Rate', 'Crime Rate', 'Harassment Rate', 'Mixed Strategy')], caption = 'Attacker Strategy (Rates per 1000 passengers)', label = 'attackerTable', digits = c(50, 3, 5, 3, 3))
p_nz_cp1 <- cp1[p_nz_i,]
p_nz_c_pr1 <- c_pr1[p_nz_i,]
p_nz_c_pr1 <- c_pr1[p_nz_i]
p_nz_c_pr1 <- c_pr1[p_nz_i]
p_nz_c_pr1 <- c_pr1[p_nz_i]
q_nz_c_pr1 <- c_pr1[q_nz_i]
defenderTable <- data.frame(p_nz_data$station_name, p_nz_data$station_lat, p_nz_data$station_lon, p_nz_c_pr1, 1000 * p_nz_data$fare_evasion_rate, 1000 * p_nz_data$crime_rate, 1000 * p_nz_data$harassment_rate, p_nz)
names(defenderTable) <- c('Station', 'Latitude', 'Longitude', 'Delay with Station Blockage', 'Fare Evasion Rate', 'Crime Rate', 'Harassment Rate', 'Mixed Strategy')
attackerTable <- data.frame(q_nz_data$station_name, q_nz_data$station_lat, q_nz_data$station_lon, q_nz_c_pr1, 1000 * q_nz_data$fare_evasion_rate, 1000 * q_nz_data$crime_rate, 1000 * q_nz_data$harassment_rate, q_nz)
names(attackerTable) <- c('Station', 'Latitude', 'Longitude', 'Delay with Station Blockage', 'Fare Evasion Rate', 'Crime Rate', 'Harassment Rate', 'Mixed Strategy')
kable(defenderTable[c('Station', 'Fare Evasion Rate', 'Crime Rate', 'Harassment Rate', 'Mixed Strategy')], caption = 'Defender Strategy (Rates per 1000 passengers)', label = 'defenderTable', digits = c(50, 3, 3, 5, 3, 3))
kable(defenderTable[c('Station', 'Delay with Station Blockage', 'Fare Evasion Rate', 'Crime Rate', 'Harassment Rate', 'Mixed Strategy')], caption = 'Defender Strategy (Rates per 1000 passengers)', label = 'defenderTable', digits = c(50, 3, 3, 5, 3, 3))
defenderTable <- data.frame(p_nz_data$station_name, p_nz_data$station_lat, p_nz_data$station_lon, p_nz_c_pr1, 1000 * p_nz_data$fare_evasion_rate, 1000 * p_nz_data$crime_rate, 1000 * p_nz_data$harassment_rate, p_nz)
names(defenderTable) <- c('Station', 'Latitude', 'Longitude', 'Blockage Delay', 'Fare Evasion Rate', 'Crime Rate', 'Harassment Rate', 'Mixed Strategy')
attackerTable <- data.frame(q_nz_data$station_name, q_nz_data$station_lat, q_nz_data$station_lon, q_nz_c_pr1, 1000 * q_nz_data$fare_evasion_rate, 1000 * q_nz_data$crime_rate, 1000 * q_nz_data$harassment_rate, q_nz)
names(attackerTable) <- c('Station', 'Latitude', 'Longitude', 'Blockage Delay', 'Fare Evasion Rate', 'Crime Rate', 'Harassment Rate', 'Mixed Strategy')
kable(defenderTable[c('Station', 'Blockage Delay', 'Fare Evasion Rate', 'Crime Rate', 'Harassment Rate', 'Mixed Strategy')], caption = 'Defender Strategy (Rates per 1000 passengers)', label = 'defenderTable', digits = c(50, 3, 3, 5, 3, 3))
p_nz_c_pr1 <- delay1[p_nz_i]
q_nz_c_pr1 <- delay1[q_nz_i]
defenderTable <- data.frame(p_nz_data$station_name, p_nz_data$station_lat, p_nz_data$station_lon, p_nz_c_pr1, 1000 * p_nz_data$fare_evasion_rate, 1000 * p_nz_data$crime_rate, 1000 * p_nz_data$harassment_rate, p_nz)
names(defenderTable) <- c('Station', 'Latitude', 'Longitude', 'Blockage Delay', 'Fare Evasion Rate', 'Crime Rate', 'Harassment Rate', 'Mixed Strategy')
attackerTable <- data.frame(q_nz_data$station_name, q_nz_data$station_lat, q_nz_data$station_lon, q_nz_c_pr1, 1000 * q_nz_data$fare_evasion_rate, 1000 * q_nz_data$crime_rate, 1000 * q_nz_data$harassment_rate, q_nz)
names(attackerTable) <- c('Station', 'Latitude', 'Longitude', 'Blockage Delay', 'Fare Evasion Rate', 'Crime Rate', 'Harassment Rate', 'Mixed Strategy')
kable(defenderTable[c('Station', 'Blockage Delay', 'Fare Evasion Rate', 'Crime Rate', 'Harassment Rate', 'Mixed Strategy')], caption = 'Defender Strategy (Rates per 1000 passengers)', label = 'defenderTable', digits = c(50, 3, 3, 5, 3, 3))
p_nz_c_pr1 <- delay1[p_nz_i]
q_nz_c_pr1 <- delay1[q_nz_i]
defenderTable <- data.frame(p_nz_data$station_name, p_nz_data$station_lat, p_nz_data$station_lon, p_nz_c_pr1, 1000 * p_nz_data$fare_evasion_rate, 1000 * p_nz_data$crime_rate, 1000 * p_nz_data$harassment_rate, p_nz)
attackerTable <- data.frame(q_nz_data$station_name, q_nz_data$station_lat, q_nz_data$station_lon, q_nz_c_pr1, 1000 * q_nz_data$fare_evasion_rate, 1000 * q_nz_data$crime_rate, 1000 * q_nz_data$harassment_rate, q_nz)
keep_cols <- c('Station', 'Latitude', 'Longitude', 'Blockage Delay (min)', 'Fare Evasion Rate', 'Crime Rate', 'Harassment Rate', 'Mixed Strategy')
names(defenderTable) <- keep_cols
names(attackerTable) <- keep_cols
keep_cols <- c('Station', 'Blockage Delay (min)', 'Fare Evasion Rate', 'Crime Rate', 'Harassment Rate', 'Mixed Strategy')
kable(defenderTable[keep_cols], caption = 'Defender Strategy (Rates per 1000 passengers)', label = 'defenderTable', digits = c(50, 3, 3, 5, 3, 3))
kable(attackerTable[keep_cols], caption = 'Attacker Strategy (Rates per 1000 passengers)', label = 'attackerTable', digits = c(50, 3, 3, 5, 3, 3))
keep_cols <- c('Station', 'Latitude', 'Longitude', 'Blockage Delay', 'Fare Evasion Rate', 'Crime Rate', 'Harassment Rate', 'Mixed Strategy')
names(defenderTable) <- keep_cols
names(attackerTable) <- keep_cols
defenderTable <- data.frame(p_nz_data$station_name, p_nz_data$station_lat, p_nz_data$station_lon, p_nz_c_pr1, 1000 * p_nz_data$fare_evasion_rate, 1000 * p_nz_data$crime_rate, 1000 * p_nz_data$harassment_rate, p_nz)
attackerTable <- data.frame(q_nz_data$station_name, q_nz_data$station_lat, q_nz_data$station_lon, q_nz_c_pr1, 1000 * q_nz_data$fare_evasion_rate, 1000 * q_nz_data$crime_rate, 1000 * q_nz_data$harassment_rate, q_nz)
cols <- c('Station', 'Latitude', 'Longitude', 'Blockage Delay', 'Fare Evasion Rate', 'Crime Rate', 'Harassment Rate', 'Mixed Strategy')
names(defenderTable) <- cols
names(attackerTable) <- cols
keep_cols <- c('Station', 'Blockage Delay', 'Fare Evasion Rate', 'Crime Rate', 'Harassment Rate', 'Mixed Strategy')
kable(defenderTable[keep_cols], caption = 'Defender Strategy (Rates per 1000 passengers, Delay in min)', label = 'defenderTable', digits = c(50, 3, 3, 5, 3, 3))
kable(defenderTable[keep_cols], caption = 'Defender Strategy (Rates per 1000 passengers, Delay in min)', label = 'defenderTable', digits = c(50, 3, 3, 5, 3, 3))
kable(attackerTable[keep_cols], caption = 'Attacker Strategy (Rates per 1000 passengers, Delay in min)', label = 'attackerTable', digits = c(50, 3, 3, 5, 3, 3))
shiny::runApp('GoogleDrive/HyperionTransit/master')
shiny::runApp('Dropbox (MIT)/Apps/Unsure')
shiny::runApp('Dropbox (MIT)/Apps/Unsure')
runApp('Documents/Apps/Unsure')
